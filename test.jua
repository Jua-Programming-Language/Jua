fn binary_search(array, search) {
    l = 0;
    r = length(array) - 1;
    steps = 0;
    while l <= r {
        steps++;
        c = (l + r) >> 1;
        v = array[c];
        if search > v
            l = c + 1;
        else if search < v
            r = c - 1;
        else
            return [c, steps];
    }
    return [-(c + 1), steps];
}

values = [3, 9, 32, 55, 69, 78, 101, 402, 1104, 2858, 11924];

for i = 0; values[i] != null; i++ {
    r = binary_search(values, values[i]);
    println(values[i] + " == " + values[r[0]] + " ? (steps: " + r[1] + ")");
}